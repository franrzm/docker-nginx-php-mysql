version: '3'

services:
  nginx:
    build:
      context: ./docker/nginx
      args:
        nginx_version: ${NGINX_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    depends_on:
      - mysql
      - php
    ports:
      - "${APP_HTTP_PORT}:80"
      - "${APP_HTTPS_PORT}:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./app:/var/www/html
    networks:
      - example-network

  mysql:
    build:
      context: ./docker/mysql
      args:
        mysql_version: ${MYSQL_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    volumes:
      - "./docker/mysql/data:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    expose:
      - "3306"
    restart: always
    networks:
      - example-network

  php:
    build:
      context: ./docker/php
      args:
        php_version: ${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-php
    expose:
      - "9000"
    volumes:
      - ./app:/var/www/html
    depends_on:
      - mysql
    networks:
      - example-network

  composer:
    build:
      context: ./docker/composer
      args:
        composer_version: ${COMPOSER_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-composer
    volumes:
      - ./app:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - example-network

networks:
  example-network:
